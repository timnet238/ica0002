- name: Install mysql-server
  ansible.builtin.apt:
    name: mysql-server

- name: Install python3-pymysql
  ansible.builtin.apt:
    name: python3-pymysql

- name: Start service mysql, if not started
  ansible.builtin.service:
    name: mysql
    state: started

- name: Enable service mysql, and not touch the state
  ansible.builtin.service:
    name: mysql
    enabled: yes

- name: copy the mysql config file and restart mysql server
  ansible.builtin.template:
    src: ../templates/override.cnf.j2
    dest: /etc/mysql/mysql.conf.d/override.cnf
  notify: 
    - Restart mysql
    
- name: MySQL database 
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: MySQL user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"
    
- name: Create /home/backup/mysql directory
  ansible.builtin.file:
    path: /home/backup/mysql
    state: directory
    owner: backup
    mode: '0755'
    
- name: Create a mysql user backup
  community.mysql.mysql_user:
    name: backup
    password: "{{ mysql_backup_password }}"
    host: "%"
    priv: "{{ mysql_database }}.*:SELECT,LOCK TABLES"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - Restart mysql

- name: Create configuration file
  ansible.builtin.template:
    src: ../templates/my.cnf.j2
    dest: /home/backup/.my.cnf
    owner: backup
    mode: '0755'
  no_log: true
  
- name: Create cron tab for creating backups
  ansible.builtin.template:
    src: ../templates/mysql-backup
    dest: /etc/cron.d/mysql-backup
  notify:
    - Restart cron
